!function(t){t(function(){!function(t){t.CoolDate=function(t,e,o){this.__timestamp=t,this.__title=e,this.__type=o.toLowerCase()},t.CoolDate.prototype={constructor:CoolDate,get timestamp(){return this.__timestamp},get title(){return this.__title},toString:function(){var t=Math.ceil((this.__timestamp-r)/864e5);return[1==t?"Завтра":2==t?"Послезавтра":["Через",t,Slavunya.math(t).declination(["день","деня","дней"])].join(" "),"будет",this.__type+".",this.__title].join(" ")}},t.CoolDate.__defineGetter__("MONTH",function(){return"Круглая дата"}),t.CoolDate.__defineGetter__("COUNT",function(){return"Красивое количество дней"})}(window);var e,o=11,n=7,a=2016,i=+new Date(a,n,o),r=+new Date,l=parseInt((+new Date-i)/864e5),C=[new CoolDate((+new Date(a,n+3,o)),"3 месяца",CoolDate.MONTH),new CoolDate((+new Date(a,n+6,o)),"полгода",CoolDate.MONTH),new CoolDate((+new Date(a,n+9,o)),"9 месяцев",CoolDate.MONTH),new CoolDate(i+95904e5,"111 дней",CoolDate.COUNT),new CoolDate(i+106272e5,"123 дня",CoolDate.COUNT),new CoolDate(i+1728e7,"200 дней",CoolDate.COUNT),new CoolDate(i+18144e6,"2 1 0 дней",CoolDate.COUNT),new CoolDate(i+191808e5,"222 дня",CoolDate.COUNT)];C.sort(function(t,e){return t.timestamp-e.timestamp}),e=C.filter(function(t){return(t.timestamp-r)/864e5>0})[0],t(".days").text(l),t("#nearest").html(e+""),t("body").delay(2e3).queue(function(e){t(this).addClass("ready"),e()})})}(jQuery),function(){var t=new ProgressBar.Path("#heart-path",{easing:"easeInOut",duration:2800});t.set(-1),t.animate(1)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
