!function(t,e){e.urlParams("debug")&&e.debug,t(function(){function n(t){return t.length}function o(t,e){return+new Date(f,t,e)>h?+new Date(f,t,e):+new Date(f+1,t,e)}function a(t){var e,n,o=(""+t).split(""),a=!0;for(e=0,n=o.length-1;e<n;e++)a=a&&o[e]==o[e+1];if(a)return a;for(a=!0,e=0,n=o.length-1;e<n;e++)a=a&&o[e]==o[e+1]+1;if(a)return a;for(a=!0,e=0,n=o.length-1;e<n;e++)a=a&&o[e]==o[e+1]-1;if(a)return a;for(a=!0,e=1,n=o.length;e<n;e++)a=a&&0==o[e];return a}!function(t){t.CoolDate=function(t,e,n){this.__timestamp=t,this.__title=e,this.__type=n.toLowerCase()},t.CoolDate.prototype={constructor:CoolDate,get timestamp(){return this.__timestamp},get title(){return this.__title},toString:function(){var t=Math.ceil((this.__timestamp-D)/864e5);return[0==t?"Сегодня":[1==t?"Завтра":2==t?"Послезавтра":["Через","<b>"+t+"</b>",Slavunya.math(t).declination(["день","дня","дней"]).toLowerCase()].join(" "),"будет"].join(" "),this.__type+":",this.__title+"."].join(" ")}},t.CoolDate.__defineGetter__("MONTH",function(){return"Круглая дата"}),t.CoolDate.__defineGetter__("COUNT",function(){return"Красивое количество дней"}),t.CoolDate.__defineGetter__("IMPORTANT",function(){return"Важное событие"})}(window);var i,r,l,u=location.hash.replace("#","").split("/").filter(n),s=parseInt(u[2])||11,c=(u[1]||8)-1,f=parseInt(u[0])||2016,h=+new Date(f,c,s),D=+new Date,_=parseInt((+new Date-h)/864e5),C=[new CoolDate((+new Date(f+1,c,s)),"Год",CoolDate.MONTH),new CoolDate((+new Date(f+1,c+6,s)),"Полтора год",CoolDate.MONTH),new CoolDate(o(1,14),'Первое "14 февраля" вместе',CoolDate.IMPORTANT),new CoolDate(o(1,23),'Первое "23 февраля" вместе',CoolDate.IMPORTANT),new CoolDate(o(2,8),'Первое "8 марта" вместе',CoolDate.IMPORTANT)],m=0,w=0;for(r=1;r<12;r++)C.push(new CoolDate((+new Date(f,c+r,s)),[r,6==r?"Полгода":e.math(r).declination(["месяц","месяца","месяцев"])].join(" "),CoolDate.MONTH));for(r=2;r<=10;r++)C.push(new CoolDate((+new Date(f+r,c,s)),[r,e.math(r).declination(["год","года","лет"])].join(" "),CoolDate.MONTH));for(r=100,l=3660;r<l;r++)a(r)&&C.push(new CoolDate(h+864e5*r,[r,e.math(r).declination(["день","дня","дней"])].join(" "),CoolDate.COUNT));C.sort(function(t,e){return t.timestamp-e.timestamp}),i=C.filter(function(t){return m<10&&(t.timestamp-D)/864e5>=0&&(m++,!0)}),e.log(i),t(".title.days").text(_),t(".text .days").text(Slavunya.math(_).declination(["день","дня","дней"])),t("#nearest").html(i[w]+"").on("click",function(){w=w<i.length-1?w+1:0,t(this).html(i[w]+"")}).on("contextmenu",function(e){e.preventDefault(),w=w>0?w-1:i.length-1,t(this).html(i[w]+"")}),t("body").delay(2e3).queue(function(e){t(this).addClass("ready"),e()})})}(jQuery,Slavunya),function(){var t=new ProgressBar.Path("#heart-path",{easing:"easeInOut",duration:2800});t.set(-1),t.animate(1)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsIiQkIiwidXJsUGFyYW1zIiwiZGVidWciLCJub3RFbXB0eSIsIml0ZW0iLCJsZW5ndGgiLCJmaXJzdEltcG9ydGFudCIsIm0iLCJkIiwiRGF0ZSIsInNZIiwic1QiLCJjb29sTnVtYmVyIiwibnVtYmVyIiwiYyIsImwiLCJudW0iLCJzcGxpdCIsImJvb2wiLCJ3aW5kb3ciLCJDb29sRGF0ZSIsInRpbWVzdGFtcCIsInRpdGxlIiwidHlwZSIsInRoaXMiLCJfX3RpbWVzdGFtcCIsIl9fdGl0bGUiLCJfX3R5cGUiLCJ0b0xvd2VyQ2FzZSIsInByb3RvdHlwZSIsImNvbnN0cnVjdG9yIiwidG9TdHJpbmciLCJkYXlzIiwiTWF0aCIsImNlaWwiLCJ0VCIsIlNsYXZ1bnlhIiwibWF0aCIsImRlY2xpbmF0aW9uIiwiam9pbiIsIl9fZGVmaW5lR2V0dGVyX18iLCJuZWFyZXN0IiwiaEQiLCJsb2NhdGlvbiIsImhhc2giLCJyZXBsYWNlIiwiZmlsdGVyIiwic0QiLCJwYXJzZUludCIsInNNIiwiY29vbCIsIk1PTlRIIiwiSU1QT1JUQU5UIiwibmVhcmVzdExlbmd0aCIsIm5lYXJlc3RJdGVyYXRvciIsInB1c2giLCJDT1VOVCIsInNvcnQiLCJhIiwiYiIsImxvZyIsInRleHQiLCJodG1sIiwib24iLCJlIiwicHJldmVudERlZmF1bHQiLCJkZWxheSIsInF1ZXVlIiwibmV4dCIsImFkZENsYXNzIiwialF1ZXJ5IiwiYmFyIiwiUHJvZ3Jlc3NCYXIiLCJQYXRoIiwiZWFzaW5nIiwiZHVyYXRpb24iLCJzZXQiLCJhbmltYXRlIl0sIm1hcHBpbmdzIjoiQ0FBQSxTQUFXQSxFQUFHQyxHQUVOQSxFQUFHQyxVQUFVLFVBQ2JELEVBQUdFLE1BR1BILEVBQUUsV0EwREUsUUFBU0ksR0FBU0MsR0FDZCxNQUFPQSxHQUFLQyxPQUdoQixRQUFTQyxHQUFlQyxFQUFHQyxHQUN2QixPQUFLLEdBQUtDLE1BQUtDLEVBQUlILEVBQUdDLEdBQU1H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RUFBa0JBLEVBQWtCYixFQUFRcEMsT0FBUyxFQUFJaUQsRUFBa0IsRUFBSSxFQUUvRXZELEVBQUV5QixNQUNHc0MsS0FBS3JCLEVBQVFhLEdBQW1CLE1BRXhDUyxHQUFHLGNBQWUsU0FBVUMsR0FDekJBLEVBQUVDLGlCQUVGWCxFQUFrQkEsRUFBa0IsRUFBSUEsRUFBa0IsRUFBSWIsRUFBUXBDLE9BQVMsRUFFL0VOLEVBQUV5QixNQUNHc0MsS0FBS3JCLEVBQVFhLEdBQW1CLE1BRzdDdkQsRUFBRSxRQUNHbUUsTUFBTSxLQUNOQyxNQUFNLFNBQVVDLEdBQ2JyRSxFQUFFeUIsTUFDRzZDLFNBQVMsU0FDZEQsU0FLYkUsT0FBUWxDLFVBRVgsV0FDSSxHQUFJbUMsR0FBTSxHQUFJQyxhQUFZQyxLQUFLLGVBQzNCQyxPQUFVLFlBQ1ZDLFNBQVUsTUFHZEosR0FBSUssS0FBSSxHQUNSTCxFQUFJTSxRQUFRIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCQsICQkKSB7XG5cbiAgICBpZiAoJCQudXJsUGFyYW1zKFwiZGVidWdcIikpIHtcbiAgICAgICAgJCQuZGVidWc7XG4gICAgfVxuXG4gICAgJChmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgKGZ1bmN0aW9uICh3aW5kb3cpIHtcbiAgICAgICAgICAgIHdpbmRvdy5Db29sRGF0ZSA9IGZ1bmN0aW9uIENvb2xEYXRlKHRpbWVzdGFtcCwgdGl0bGUsIHR5cGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9fdGltZXN0YW1wID0gdGltZXN0YW1wO1xuICAgICAgICAgICAgICAgIHRoaXMuX190aXRsZSAgICAgPSB0aXRsZTtcbiAgICAgICAgICAgICAgICB0aGlzLl9fdHlwZSAgICAgID0gdHlwZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgd2luZG93LkNvb2xEYXRlLnByb3RvdHlwZSA9IHtcbiAgICAgICAgICAgICAgICBjb25zdHJ1Y3RvcjogQ29vbERhdGUsXG5cbiAgICAgICAgICAgICAgICBnZXQgdGltZXN0YW1wKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fX3RpbWVzdGFtcDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCB0aXRsZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX190aXRsZTtcbiAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgICAgdG9TdHJpbmc6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRheXMgPSBNYXRoLmNlaWwoKHRoaXMuX190aW1lc3RhbXAgLSB0VCkgLyA4NjRlNSk7XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIChkYXlzID09IDAgPyBcItCh0LXQs9C+0LTQvdGPXCIgOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5cyA9PSAxID8gXCLQl9Cw0LLRgtGA0LBcIiA6IGRheXMgPT0gMiA/IFwi0J/QvtGB0LvQtdC30LDQstGC0YDQsFwiIDogKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcItCn0LXRgNC10LdcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPGI+XCIgKyBkYXlzICsgXCI8L2I+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTbGF2dW55YVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5tYXRoKGRheXMpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmRlY2xpbmF0aW9uKFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCLQtNC10L3RjFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcItC00L3Rj1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcItC00L3QtdC5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0uam9pbihcIiBcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwi0LHRg9C00LXRglwiXG4gICAgICAgICAgICAgICAgICAgICAgICBdLmpvaW4oXCIgXCIpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX190eXBlICsgXCI6XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9fdGl0bGUgKyBcIi5cIlxuICAgICAgICAgICAgICAgICAgICBdLmpvaW4oXCIgXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHdpbmRvdy5Db29sRGF0ZS5fX2RlZmluZUdldHRlcl9fKFwiTU9OVEhcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcItCa0YDRg9Cz0LvQsNGPINC00LDRgtCwXCI7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHdpbmRvdy5Db29sRGF0ZS5fX2RlZmluZUdldHRlcl9fKFwiQ09VTlRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcItCa0YDQsNGB0LjQstC+0LUg0LrQvtC70LjRh9C10YHRgtCy0L4g0LTQvdC10LlcIjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgd2luZG93LkNvb2xEYXRlLl9fZGVmaW5lR2V0dGVyX18oXCJJTVBPUlRBTlRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcItCS0LDQttC90L7QtSDRgdC+0LHRi9GC0LjQtVwiO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfSkod2luZG93KTtcblxuICAgICAgICBmdW5jdGlvbiBub3RFbXB0eShpdGVtKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbS5sZW5ndGhcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGZpcnN0SW1wb3J0YW50KG0sIGQpIHtcbiAgICAgICAgICAgIGlmICgrKG5ldyBEYXRlKHNZLCBtLCBkKSkgPiBzVCkge1xuICAgICAgICAgICAgICAgIHJldHVybiArKG5ldyBEYXRlKHNZLCBtLCBkKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gKyhuZXcgRGF0ZShzWSArIDEsIG0sIGQpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGNvb2xOdW1iZXIobnVtYmVyKSB7XG4gICAgICAgICAgICB2YXIgbnVtICA9IChcIlwiICsgbnVtYmVyKS5zcGxpdChcIlwiKSxcbiAgICAgICAgICAgICAgICBib29sID0gdHJ1ZSxcbiAgICAgICAgICAgICAgICBjLCBsO1xuXG4gICAgICAgICAgICBmb3IgKGMgPSAwLCBsID0gbnVtLmxlbmd0aCAtIDE7IGMgPCBsOyBjKyspIHtcbiAgICAgICAgICAgICAgICBib29sID0gYm9vbCAmJiBudW1bY10gPT0gbnVtW2MgKyAxXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGJvb2wpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYm9vbDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYm9vbCA9IHRydWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvciAoYyA9IDAsIGwgPSBudW0ubGVuZ3RoIC0gMTsgYyA8IGw7IGMrKykge1xuICAgICAgICAgICAgICAgIGJvb2wgPSBib29sICYmIG51bVtjXSA9PSBudW1bYyArIDFdICsgMTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGJvb2wpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYm9vbDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYm9vbCA9IHRydWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvciAoYyA9IDAsIGwgPSBudW0ubGVuZ3RoIC0gMTsgYyA8IGw7IGMrKykge1xuICAgICAgICAgICAgICAgIGJvb2wgPSBib29sICYmIG51bVtjXSA9PSBudW1bYyArIDFdIC0gMTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGJvb2wpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYm9vbDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYm9vbCA9IHRydWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvciAoYyA9IDEsIGwgPSBudW0ubGVuZ3RoOyBjIDwgbDsgYysrKSB7XG4gICAgICAgICAgICAgICAgYm9vbCA9IGJvb2wgJiYgbnVtW2NdID09IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBib29sO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGhEICAgICAgICAgICAgICA9IGxvY2F0aW9uLmhhc2gucmVwbGFjZShcIiNcIiwgXCJcIikuc3BsaXQoXCIvXCIpLmZpbHRlcihub3RFbXB0eSksXG4gICAgICAgICAgICBzRCAgICAgICAgICAgICAgPSBwYXJzZUludChoRFsyXSkgfHwgMTEsXG4gICAgICAgICAgICBzTSAgICAgICAgICAgICAgPSAoaERbMV0gfHwgOCkgLSAxLFxuICAgICAgICAgICAgc1kgICAgICAgICAgICAgID0gcGFyc2VJbnQoaERbMF0pIHx8IDIwMTYsXG4gICAgICAgICAgICBzVCAgICAgICAgICAgICAgPSArKG5ldyBEYXRlKHNZLCBzTSwgc0QpKSxcbiAgICAgICAgICAgIHRUICAgICAgICAgICAgICA9ICsobmV3IERhdGUpLFxuICAgICAgICAgICAgZGF5cyAgICAgICAgICAgID0gcGFyc2VJbnQoKCsobmV3IERhdGUpIC0gc1QpIC8gODY0ZTUpLFxuICAgICAgICAgICAgY29vbCAgICAgICAgICAgID0gW1xuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqINCa0YDRg9Cz0LvRi9C1INC00LDRgtGLXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKCsobmV3IERhdGUoc1kgKyAxLCBzTSwgc0QpKSwgXCLQk9C+0LRcIiwgQ29vbERhdGUuTU9OVEgpLFxuICAgICAgICAgICAgICAgIG5ldyBDb29sRGF0ZSgrKG5ldyBEYXRlKHNZICsgMSwgc00gKyA2LCBzRCkpLCBcItCf0L7Qu9GC0L7RgNCwINCz0L7QtFwiLCBDb29sRGF0ZS5NT05USCksXG5cbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiDQktCw0LbQvdGL0LUg0YHQvtCx0YvRgtC40Y9cbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICBuZXcgQ29vbERhdGUoZmlyc3RJbXBvcnRhbnQoMSwgMTQpLCBcItCf0LXRgNCy0L7QtSBcXFwiMTQg0YTQtdCy0YDQsNC70Y9cXFwiINCy0LzQtdGB0YLQtVwiLCBDb29sRGF0ZS5JTVBPUlRBTlQpLFxuICAgICAgICAgICAgICAgIG5ldyBDb29sRGF0ZShmaXJzdEltcG9ydGFudCgxLCAyMyksIFwi0J/QtdGA0LLQvtC1IFxcXCIyMyDRhNC10LLRgNCw0LvRj1xcXCIg0LLQvNC10YHRgtC1XCIsIENvb2xEYXRlLklNUE9SVEFOVCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKGZpcnN0SW1wb3J0YW50KDIsIDgpLCBcItCf0LXRgNCy0L7QtSBcXFwiOCDQvNCw0YDRgtCwXFxcIiDQstC80LXRgdGC0LVcIiwgQ29vbERhdGUuSU1QT1JUQU5UKVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIG5lYXJlc3QsXG4gICAgICAgICAgICBuZWFyZXN0TGVuZ3RoICAgPSAwLFxuICAgICAgICAgICAgbmVhcmVzdEl0ZXJhdG9yID0gMCxcbiAgICAgICAgICAgIGMsIGw7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqINCa0YDRg9Cz0LvRi9C1INC00LDRgtGLXG4gICAgICAgICAqL1xuICAgICAgICBmb3IgKGMgPSAxOyBjIDwgMTI7IGMrKykge1xuICAgICAgICAgICAgY29vbC5wdXNoKG5ldyBDb29sRGF0ZShcbiAgICAgICAgICAgICAgICArKG5ldyBEYXRlKHNZLCBzTSArIGMsIHNEKSksXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBjLFxuICAgICAgICAgICAgICAgICAgICBjID09IDYgPyBcItCf0L7Qu9Cz0L7QtNCwXCIgOiAkJFxuICAgICAgICAgICAgICAgICAgICAgICAgLm1hdGgoYylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5kZWNsaW5hdGlvbihbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCLQvNC10YHRj9GGXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCLQvNC10YHRj9GG0LBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcItC80LXRgdGP0YbQtdCyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgXS5qb2luKFwiIFwiKSxcbiAgICAgICAgICAgICAgICBDb29sRGF0ZS5NT05USFxuICAgICAgICAgICAgKSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICog0JrRgNGD0LPQu9GL0LUg0LTQsNGC0YtcbiAgICAgICAgICovXG4gICAgICAgIGZvciAoYyA9IDI7IGMgPD0gMTA7IGMrKykge1xuICAgICAgICAgICAgY29vbC5wdXNoKG5ldyBDb29sRGF0ZShcbiAgICAgICAgICAgICAgICArKG5ldyBEYXRlKHNZICsgYywgc00sIHNEKSksXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBjLFxuICAgICAgICAgICAgICAgICAgICAkJFxuICAgICAgICAgICAgICAgICAgICAgICAgLm1hdGgoYylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5kZWNsaW5hdGlvbihbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCLQs9C+0LRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcItCz0L7QtNCwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCLQu9C10YJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICBdLmpvaW4oXCIgXCIpLFxuICAgICAgICAgICAgICAgIENvb2xEYXRlLk1PTlRIXG4gICAgICAgICAgICApKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDQmtGA0LDRgdC40LLRi9C1INGH0LjRgdC70LBcbiAgICAgICAgICovXG4gICAgICAgIGZvciAoYyA9IDEwMCwgbCA9IDM2NiAqIDEwOyBjIDwgbDsgYysrKSB7XG4gICAgICAgICAgICBpZiAoY29vbE51bWJlcihjKSkge1xuICAgICAgICAgICAgICAgIGNvb2wucHVzaChuZXcgQ29vbERhdGUoc1QgKyBjICogODY0ZTUsXG4gICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIGMsXG4gICAgICAgICAgICAgICAgICAgICAgICAkJFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5tYXRoKGMpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmRlY2xpbmF0aW9uKFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCLQtNC10L3RjFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcItC00L3Rj1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcItC00L3QtdC5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICBdLmpvaW4oXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICBDb29sRGF0ZS5DT1VOVFxuICAgICAgICAgICAgICAgICkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29vbC5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4gYS50aW1lc3RhbXAgLSBiLnRpbWVzdGFtcDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbmVhcmVzdCA9IGNvb2wuZmlsdGVyKGZ1bmN0aW9uIChjb29sKSB7XG4gICAgICAgICAgICBpZiAobmVhcmVzdExlbmd0aCA8IDEwKSB7XG4gICAgICAgICAgICAgICAgaWYgKChjb29sLnRpbWVzdGFtcCAtIHRUKSAvIDg2NGU1ID49IDApIHtcbiAgICAgICAgICAgICAgICAgICAgbmVhcmVzdExlbmd0aCsrO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICQkLmxvZyhuZWFyZXN0KTtcblxuICAgICAgICAkKFwiLnRpdGxlLmRheXNcIilcbiAgICAgICAgICAgIC50ZXh0KGRheXMpO1xuXG4gICAgICAgICQoXCIudGV4dCAuZGF5c1wiKVxuICAgICAgICAgICAgLnRleHQoXG4gICAgICAgICAgICAgICAgU2xhdnVueWFcbiAgICAgICAgICAgICAgICAgICAgLm1hdGgoZGF5cylcbiAgICAgICAgICAgICAgICAgICAgLmRlY2xpbmF0aW9uKFtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwi0LTQtdC90YxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwi0LTQvdGPXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcItC00L3QtdC5XCJcbiAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgJChcIiNuZWFyZXN0XCIpXG4gICAgICAgICAgICAuaHRtbChuZWFyZXN0W25lYXJlc3RJdGVyYXRvcl0gKyBcIlwiKVxuICAgICAgICAgICAgLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIG5lYXJlc3RJdGVyYXRvciA9IG5lYXJlc3RJdGVyYXRvciA8IG5lYXJlc3QubGVuZ3RoIC0gMSA/IG5lYXJlc3RJdGVyYXRvciArIDEgOiAwO1xuXG4gICAgICAgICAgICAgICAgJCh0aGlzKVxuICAgICAgICAgICAgICAgICAgICAuaHRtbChuZWFyZXN0W25lYXJlc3RJdGVyYXRvcl0gKyBcIlwiKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAub24oXCJjb250ZXh0bWVudVwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgICAgIG5lYXJlc3RJdGVyYXRvciA9IG5lYXJlc3RJdGVyYXRvciA+IDAgPyBuZWFyZXN0SXRlcmF0b3IgLSAxIDogbmVhcmVzdC5sZW5ndGggLSAxO1xuXG4gICAgICAgICAgICAgICAgJCh0aGlzKVxuICAgICAgICAgICAgICAgICAgICAuaHRtbChuZWFyZXN0W25lYXJlc3RJdGVyYXRvcl0gKyBcIlwiKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICQoXCJib2R5XCIpXG4gICAgICAgICAgICAuZGVsYXkoMmUzKVxuICAgICAgICAgICAgLnF1ZXVlKGZ1bmN0aW9uIChuZXh0KSB7XG4gICAgICAgICAgICAgICAgJCh0aGlzKVxuICAgICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJyZWFkeVwiKTtcbiAgICAgICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgICAgICB9KTtcblxuICAgIH0pO1xuXG59KShqUXVlcnksIFNsYXZ1bnlhKTtcblxuKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgYmFyID0gbmV3IFByb2dyZXNzQmFyLlBhdGgoJyNoZWFydC1wYXRoJywge1xuICAgICAgICBlYXNpbmc6ICAgJ2Vhc2VJbk91dCcsXG4gICAgICAgIGR1cmF0aW9uOiAxNDAwICogMlxuICAgIH0pO1xuXG4gICAgYmFyLnNldCgtMSk7XG4gICAgYmFyLmFuaW1hdGUoMSk7XG59KSgpO1xuIl19
