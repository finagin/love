!function(t){t(function(){function e(t){return t.length}!function(t){t.CoolDate=function(t,e,o){this.__timestamp=t,this.__title=e,this.__type=o.toLowerCase()},t.CoolDate.prototype={constructor:CoolDate,get timestamp(){return this.__timestamp},get title(){return this.__title},toString:function(){var t=Math.ceil((this.__timestamp-C)/864e5);return[0==t?"Сегодня":[1==t?"Завтра":2==t?"Послезавтра":["Через","<b>"+t+"</b>",Slavunya.math(t).declination(["день","дня","дней"]).toLowerCase()].join(" "),"будет"].join(" "),this.__type+":",this.__title+"."].join(" ")}},t.CoolDate.__defineGetter__("MONTH",function(){return"Круглая дата"}),t.CoolDate.__defineGetter__("COUNT",function(){return"Красивое количество дней"}),t.CoolDate.__defineGetter__("IMPORTANT",function(){return"Важное событие"})}(window);var o,n=location.hash.replace("#","").split("/").filter(e),a=n[2]||11,i=(n[1]||8)-1,l=n[0]||2016,r=+new Date(l,i,a),C=+new Date,D=parseInt((+new Date-r)/864e5),s=[new CoolDate((+new Date(l,i+3,a)),"3 месяца",CoolDate.MONTH),new CoolDate((+new Date(l,i+6,a)),"Полгода",CoolDate.MONTH),new CoolDate((+new Date(l,i+9,a)),"9 месяцев",CoolDate.MONTH),new CoolDate(r+95904e5,"111 дней",CoolDate.COUNT),new CoolDate(r+106272e5,"123 дня",CoolDate.COUNT),new CoolDate(r+1728e7,"200 дней",CoolDate.COUNT),new CoolDate(r+18144e6,"2 1 0 дней",CoolDate.COUNT),new CoolDate(r+191808e5,"222 дня",CoolDate.COUNT),new CoolDate((+new Date(l+1,1,14)),'Первое "14 февраля" вместе',CoolDate.IMPORTANT),new CoolDate((+new Date(l+1,1,23)),'Первое "23 февраля" вместе',CoolDate.IMPORTANT),new CoolDate((+new Date(l+1,2,8)),'Первое "8 марта" вместе',CoolDate.IMPORTANT)],u=0;s.sort(function(t,e){return t.timestamp-e.timestamp}),o=s.filter(function(t){return(t.timestamp-C)/864e5>=0}),t(".title.days").text(D),t(".text .days").text(Slavunya.math(D).declination(["день","дня","дней"])),t("#nearest").html(o[u]+"").on("click",function(){u=u<o.length-1?u+1:0,t(this).html(o[u]+"")}),t("body").delay(2e3).queue(function(e){t(this).addClass("ready"),e()})})}(jQuery),function(){var t=new ProgressBar.Path("#heart-path",{easing:"easeInOut",duration:2800});t.set(-1),t.animate(1)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
