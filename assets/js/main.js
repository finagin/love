!function(t,e){e.urlParams("debug")&&e.debug,t(function(){function n(t){return t.length}function o(t,e){return+new Date(f,t,e)>h?+new Date(f,t,e):+new Date(f+1,t,e)}function a(t){var e,n,o=(""+t).split(""),a=!0;for(e=0,n=o.length-1;e<n;e++)a=a&&o[e]==o[e+1];if(a)return a;for(a=!0,e=0,n=o.length-1;e<n;e++)a=a&&o[e]==o[e+1]+1;if(a)return a;for(a=!0,e=0,n=o.length-1;e<n;e++)a=a&&o[e]==o[e+1]-1;if(a)return a;for(a=!0,e=1,n=o.length;e<n;e++)a=a&&0==o[e];return a}!function(t){t.CoolDate=function(t,e,n){this.__timestamp=t,this.__title=e,this.__type=n.toLowerCase()},t.CoolDate.prototype={constructor:CoolDate,get timestamp(){return this.__timestamp},get title(){return this.__title},toString:function(){var t=Math.ceil((this.__timestamp-D)/864e5);return[0==t?"Сегодня":[1==t?"Завтра":2==t?"Послезавтра":["Через","<b>"+t+"</b>",Slavunya.math(t).declination(["день","дня","дней"]).toLowerCase()].join(" "),"будет"].join(" "),this.__type+":",this.__title+"."].join(" ")}},t.CoolDate.__defineGetter__("MONTH",function(){return"Круглая дата"}),t.CoolDate.__defineGetter__("COUNT",function(){return"Красивое количество дней"}),t.CoolDate.__defineGetter__("IMPORTANT",function(){return"Важное событие"})}(window);var i,r,l,u=location.hash.replace("#","").split("/").filter(n),s=parseInt(u[2])||11,c=(u[1]||8)-1,f=parseInt(u[0])||2016,h=+new Date(f,c,s),D=+new Date,_=parseInt((+new Date-h)/864e5),C=[new CoolDate((+new Date(f+1,c,s)),"Год",CoolDate.MONTH),new CoolDate((+new Date(f+1,c+6,s)),"Полтора год",CoolDate.MONTH),new CoolDate(o(1,14),'Первое "14 февраля" вместе',CoolDate.IMPORTANT),new CoolDate(o(1,23),'Первое "23 февраля" вместе',CoolDate.IMPORTANT),new CoolDate(o(2,8),'Первое "8 марта" вместе',CoolDate.IMPORTANT)],m=0,w=0;for(r=1;r<12;r++)C.push(new CoolDate((+new Date(f,c+r,s)),[r,6==с?"Полгода":e.math(r).declination(["месяц","месяца","месяцев"])].join(" "),CoolDate.MONTH));for(r=2;r<=10;r++)C.push(new CoolDate((+new Date(f+r,c,s)),[r,e.math(r).declination(["год","года","лет"])].join(" "),CoolDate.MONTH));for(r=100,l=3660;r<l;r++)a(r)&&C.push(new CoolDate(h+864e5*r,[r,e.math(r).declination(["день","дня","дней"])].join(" "),CoolDate.COUNT));C.sort(function(t,e){return t.timestamp-e.timestamp}),i=C.filter(function(t){return m<10&&(t.timestamp-D)/864e5>=0&&(m++,!0)}),e.log(i),t(".title.days").text(_),t(".text .days").text(Slavunya.math(_).declination(["день","дня","дней"])),t("#nearest").html(i[w]+"").on("click",function(){w=w<i.length-1?w+1:0,t(this).html(i[w]+"")}).on("contextmenu",function(e){e.preventDefault(),w=w>0?w-1:i.length-1,t(this).html(i[w]+"")}),t("body").delay(2e3).queue(function(e){t(this).addClass("ready"),e()})})}(jQuery,Slavunya),function(){var t=new ProgressBar.Path("#heart-path",{easing:"easeInOut",duration:2800});t.set(-1),t.animate(1)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
