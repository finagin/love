!function(e,t){t.urlParams("debug")&&t.debug,e(function(){function o(e){return e.length}function a(e,t){return+new Date(i,e,t)>r?+new Date(i,e,t):+new Date(i+1,e,t)}!function(e){e.CoolDate=function(e,t,o){this.__timestamp=e,this.__title=t,this.__type=o.toLowerCase()},e.CoolDate.prototype={constructor:CoolDate,get timestamp(){return this.__timestamp},get title(){return this.__title},toString:function(){var e=Math.ceil((this.__timestamp-w)/864e5);return[0==e?"Сегодня":[1==e?"Завтра":2==e?"Послезавтра":["Через","<b>"+e+"</b>",Slavunya.math(e).declination(["день","дня","дней"]).toLowerCase()].join(" "),"будет"].join(" "),this.__type+":",this.__title+"."].join(" ")}},e.CoolDate.__defineGetter__("MONTH",function(){return"Круглая дата"}),e.CoolDate.__defineGetter__("COUNT",function(){return"Красивое количество дней"}),e.CoolDate.__defineGetter__("IMPORTANT",function(){return"Важное событие"})}(window);var n,l=location.hash.replace("#","").split("/").filter(o),D=l[2]||11,C=(l[1]||8)-1,i=l[0]||2016,r=+new Date(i,C,D),w=+new Date,u=parseInt((+new Date-r)/864e5),s=[new CoolDate((+new Date(i,C+3,D)),"3 месяца",CoolDate.MONTH),new CoolDate((+new Date(i,C+6,D)),"Полгода",CoolDate.MONTH),new CoolDate((+new Date(i,C+9,D)),"9 месяцев",CoolDate.MONTH),new CoolDate((+new Date(i+1,C,D)),"Год",CoolDate.MONTH),new CoolDate((+new Date(i+1,C+6,D)),"Полтора год",CoolDate.MONTH),new CoolDate((+new Date(i+2,C,D)),"2 года",CoolDate.MONTH),new CoolDate((+new Date(i+3,C,D)),"3 года",CoolDate.MONTH),new CoolDate((+new Date(i+4,C,D)),"4 года",CoolDate.MONTH),new CoolDate((+new Date(i+5,C,D)),"5 лет",CoolDate.MONTH),new CoolDate((+new Date(i+6,C,D)),"6 лет",CoolDate.MONTH),new CoolDate(r+95904e5,"111 дней",CoolDate.COUNT),new CoolDate(r+106272e5,"123 дня",CoolDate.COUNT),new CoolDate(r+1728e7,"200 дней",CoolDate.COUNT),new CoolDate(r+18144e6,"2 1 0",CoolDate.COUNT),new CoolDate(r+191808e5,"222 дня",CoolDate.COUNT),new CoolDate(r+202176e5,"234 дня",CoolDate.COUNT),new CoolDate(r+2592e7,"300 дней",CoolDate.COUNT),new CoolDate(r+277344e5,"3 2 1",CoolDate.COUNT),new CoolDate(r+287712e5,"333 дня",CoolDate.COUNT),new CoolDate(r+29808e6,"345 дней",CoolDate.COUNT),new CoolDate(a(1,14),'Первое "14 февраля" вместе',CoolDate.IMPORTANT),new CoolDate(a(1,23),'Первое "23 февраля" вместе',CoolDate.IMPORTANT),new CoolDate(a(2,8),'Первое "8 марта" вместе',CoolDate.IMPORTANT)],c=0;t.log(l,D,C,i),s.sort(function(e,t){return e.timestamp-t.timestamp}),n=s.filter(function(e,t){return t<10&&(e.timestamp-w)/864e5>=0}),t.log(n),e(".title.days").text(u),e(".text .days").text(Slavunya.math(u).declination(["день","дня","дней"])),e("#nearest").html(n[c]+"").on("click",function(){c=c<n.length-1?c+1:0,e(this).html(n[c]+"")}),e("body").delay(2e3).queue(function(t){e(this).addClass("ready"),t()})})}(jQuery,Slavunya),function(){var e=new ProgressBar.Path("#heart-path",{easing:"easeInOut",duration:2800});e.set(-1),e.animate(1)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsIiQkIiwidXJsUGFyYW1zIiwiZGVidWciLCJub3RFbXB0eSIsIml0ZW0iLCJsZW5ndGgiLCJmaXJzdEltcG9ydGFudCIsIm0iLCJkIiwiRGF0ZSIsInNZIiwic1QiLCJ3aW5kb3ciLCJDb29sRGF0ZSIsInRpbWVzdGFtcCIsInRpdGxlIiwidHlwZSIsInRoaXMiLCJfX3RpbWVzdGFtcCIsIl9fdGl0bGUiLCJfX3R5cGUiLCJ0b0xvd2VyQ2FzZSIsInByb3RvdHlwZSIsImNvbnN0cnVjdG9yIiwidG9TdHJpbmciLCJkYXlzIiwiTWF0aCIsImNlaWwiLCJ0VCIsIlNsYXZ1bnlhIiwibWF0aCIsImRlY2xpbmF0aW9uIiwiam9pbiIsIl9fZGVmaW5lR2V0dGVyX18iLCJuZWFyZXN0IiwiaEQiLCJsb2NhdGlvbiIsImhhc2giLCJyZXBsYWNlIiwic3BsaXQiLCJmaWx0ZXIiLCJzRCIsInNNIiwicGFyc2VJbnQiLCJjb29sIiwiTU9OVEgiLCJDT1VOVCIsIklNUE9SVEFOVCIsIm5lYXJlc3RJdGVyYXRvciIsImxvZyIsInNvcnQiLCJhIiwiYiIsImluZGV4IiwidGV4dCIsImh0bWwiLCJvbiIsImRlbGF5IiwicXVldWUiLCJuZXh0IiwiYWRkQ2xhc3MiLCJqUXVlcnkiLCJiYXIiLCJQcm9ncmVzc0JhciIsIlBhdGgiLCJlYXNpbmciLCJkdXJhdGlvbiIsInNldCIsImFuaW1hdGUiXSwibWFwcGluZ3MiOiJDQUFBLFNBQVdBLEVBQUdDLEdBRU5BLEVBQUdDLFVBQVUsVUFDYkQsRUFBR0UsTUFHUEgsRUFBRSxXQTBERSxRQUFTSSxHQUFTQyxHQUNkLE1BQU9BLEdBQUtDLE9BR2hCLFFBQVNDLEdBQWVDLEVBQUdDLEdBQ3ZCLE9BQUssR0FBS0MsTUFBS0MsRUFBSUgsRUFBR0MsR0FBTUcsR0FDaEIsR0FBS0YsTUFBS0MsRUFBSUgsRUFBR0MsSUFFckIsR0FBS0MsTUFBS0MsRUFBSyxFQUFHSCxFQUFHQyxJQWhFakMsU0FBV0ks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R0FDUkwsRUFBSU0sUUFBUSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgkLCAkJCkge1xuXG4gICAgaWYgKCQkLnVybFBhcmFtcyhcImRlYnVnXCIpKSB7XG4gICAgICAgICQkLmRlYnVnO1xuICAgIH1cblxuICAgICQoZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIChmdW5jdGlvbiAod2luZG93KSB7XG4gICAgICAgICAgICB3aW5kb3cuQ29vbERhdGUgPSBmdW5jdGlvbiBDb29sRGF0ZSh0aW1lc3RhbXAsIHRpdGxlLCB0eXBlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fX3RpbWVzdGFtcCA9IHRpbWVzdGFtcDtcbiAgICAgICAgICAgICAgICB0aGlzLl9fdGl0bGUgICAgID0gdGl0bGU7XG4gICAgICAgICAgICAgICAgdGhpcy5fX3R5cGUgICAgICA9IHR5cGUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHdpbmRvdy5Db29sRGF0ZS5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICAgICAgY29uc3RydWN0b3I6IENvb2xEYXRlLFxuXG4gICAgICAgICAgICAgICAgZ2V0IHRpbWVzdGFtcCgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX190aW1lc3RhbXA7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgdGl0bGUoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9fdGl0bGU7XG4gICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgIHRvU3RyaW5nOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXlzID0gTWF0aC5jZWlsKCh0aGlzLl9fdGltZXN0YW1wIC0gdFQpIC8gODY0ZTUpO1xuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAoZGF5cyA9PSAwID8gXCLQodC10LPQvtC00L3Rj1wiIDogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheXMgPT0gMSA/IFwi0JfQsNCy0YLRgNCwXCIgOiBkYXlzID09IDIgPyBcItCf0L7RgdC70LXQt9Cw0LLRgtGA0LBcIiA6IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCLQp9C10YDQtdC3XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjxiPlwiICsgZGF5cyArIFwiPC9iPlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2xhdnVueWFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAubWF0aChkYXlzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5kZWNsaW5hdGlvbihbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwi0LTQtdC90YxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCLQtNC90Y9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCLQtNC90LXQuVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLmpvaW4oXCIgXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcItCx0YPQtNC10YJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgXS5qb2luKFwiIFwiKSksXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9fdHlwZSArIFwiOlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fX3RpdGxlICsgXCIuXCJcbiAgICAgICAgICAgICAgICAgICAgXS5qb2luKFwiIFwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICB3aW5kb3cuQ29vbERhdGUuX19kZWZpbmVHZXR0ZXJfXyhcIk1PTlRIXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCLQmtGA0YPQs9C70LDRjyDQtNCw0YLQsFwiO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB3aW5kb3cuQ29vbERhdGUuX19kZWZpbmVHZXR0ZXJfXyhcIkNPVU5UXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCLQmtGA0LDRgdC40LLQvtC1INC60L7Qu9C40YfQtdGB0YLQstC+INC00L3QtdC5XCI7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHdpbmRvdy5Db29sRGF0ZS5fX2RlZmluZUdldHRlcl9fKFwiSU1QT1JUQU5UXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCLQktCw0LbQvdC+0LUg0YHQvtCx0YvRgtC40LVcIjtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH0pKHdpbmRvdyk7XG5cbiAgICAgICAgZnVuY3Rpb24gbm90RW1wdHkoaXRlbSkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW0ubGVuZ3RoXG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBmaXJzdEltcG9ydGFudChtLCBkKSB7XG4gICAgICAgICAgICBpZiAoKyhuZXcgRGF0ZShzWSwgbSwgZCkpID4gc1QpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKyhuZXcgRGF0ZShzWSwgbSwgZCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuICsobmV3IERhdGUoc1kgKyAxLCBtLCBkKSk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgaEQgICAgICAgICAgICAgID0gbG9jYXRpb24uaGFzaC5yZXBsYWNlKFwiI1wiLCBcIlwiKS5zcGxpdChcIi9cIikuZmlsdGVyKG5vdEVtcHR5KSxcbiAgICAgICAgICAgIHNEICAgICAgICAgICAgICA9IGhEWzJdIHx8IDExLFxuICAgICAgICAgICAgc00gICAgICAgICAgICAgID0gKGhEWzFdIHx8IDgpIC0gMSxcbiAgICAgICAgICAgIHNZICAgICAgICAgICAgICA9IGhEWzBdIHx8IDIwMTYsXG4gICAgICAgICAgICBzVCAgICAgICAgICAgICAgPSArKG5ldyBEYXRlKHNZLCBzTSwgc0QpKSxcbiAgICAgICAgICAgIHRUICAgICAgICAgICAgICA9ICsobmV3IERhdGUpLFxuICAgICAgICAgICAgZGF5cyAgICAgICAgICAgID0gcGFyc2VJbnQoKCsobmV3IERhdGUpIC0gc1QpIC8gODY0ZTUpLFxuICAgICAgICAgICAgY29vbCAgICAgICAgICAgID0gW1xuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqINCa0YDRg9Cz0LvRi9C1INC00LDRgtGLXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKCsobmV3IERhdGUoc1ksIHNNICsgMywgc0QpKSwgXCIzINC80LXRgdGP0YbQsFwiLCBDb29sRGF0ZS5NT05USCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKCsobmV3IERhdGUoc1ksIHNNICsgNiwgc0QpKSwgXCLQn9C+0LvQs9C+0LTQsFwiLCBDb29sRGF0ZS5NT05USCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKCsobmV3IERhdGUoc1ksIHNNICsgOSwgc0QpKSwgXCI5INC80LXRgdGP0YbQtdCyXCIsIENvb2xEYXRlLk1PTlRIKSxcbiAgICAgICAgICAgICAgICBuZXcgQ29vbERhdGUoKyhuZXcgRGF0ZShzWSArIDEsIHNNLCBzRCkpLCBcItCT0L7QtFwiLCBDb29sRGF0ZS5NT05USCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKCsobmV3IERhdGUoc1kgKyAxLCBzTSArIDYsIHNEKSksIFwi0J/QvtC70YLQvtGA0LAg0LPQvtC0XCIsIENvb2xEYXRlLk1PTlRIKSxcbiAgICAgICAgICAgICAgICBuZXcgQ29vbERhdGUoKyhuZXcgRGF0ZShzWSArIDIsIHNNLCBzRCkpLCBcIjIg0LPQvtC00LBcIiwgQ29vbERhdGUuTU9OVEgpLFxuICAgICAgICAgICAgICAgIG5ldyBDb29sRGF0ZSgrKG5ldyBEYXRlKHNZICsgMywgc00sIHNEKSksIFwiMyDQs9C+0LTQsFwiLCBDb29sRGF0ZS5NT05USCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKCsobmV3IERhdGUoc1kgKyA0LCBzTSwgc0QpKSwgXCI0INCz0L7QtNCwXCIsIENvb2xEYXRlLk1PTlRIKSxcbiAgICAgICAgICAgICAgICBuZXcgQ29vbERhdGUoKyhuZXcgRGF0ZShzWSArIDUsIHNNLCBzRCkpLCBcIjUg0LvQtdGCXCIsIENvb2xEYXRlLk1PTlRIKSxcbiAgICAgICAgICAgICAgICBuZXcgQ29vbERhdGUoKyhuZXcgRGF0ZShzWSArIDYsIHNNLCBzRCkpLCBcIjYg0LvQtdGCXCIsIENvb2xEYXRlLk1PTlRIKSxcblxuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqINCa0YDQsNGB0LjQstGL0LUg0YfQuNGB0LvQsFxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIG5ldyBDb29sRGF0ZShzVCArIDExMSAqIDg2NGU1LCBcIjExMSDQtNC90LXQuVwiLCBDb29sRGF0ZS5DT1VOVCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKHNUICsgMTIzICogODY0ZTUsIFwiMTIzINC00L3Rj1wiLCBDb29sRGF0ZS5DT1VOVCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKHNUICsgMjAwICogODY0ZTUsIFwiMjAwINC00L3QtdC5XCIsIENvb2xEYXRlLkNPVU5UKSxcbiAgICAgICAgICAgICAgICBuZXcgQ29vbERhdGUoc1QgKyAyMTAgKiA4NjRlNSwgXCIyIDEgMFwiLCBDb29sRGF0ZS5DT1VOVCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKHNUICsgMjIyICogODY0ZTUsIFwiMjIyINC00L3Rj1wiLCBDb29sRGF0ZS5DT1VOVCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKHNUICsgMjM0ICogODY0ZTUsIFwiMjM0INC00L3Rj1wiLCBDb29sRGF0ZS5DT1VOVCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKHNUICsgMzAwICogODY0ZTUsIFwiMzAwINC00L3QtdC5XCIsIENvb2xEYXRlLkNPVU5UKSxcbiAgICAgICAgICAgICAgICBuZXcgQ29vbERhdGUoc1QgKyAzMjEgKiA4NjRlNSwgXCIzIDIgMVwiLCBDb29sRGF0ZS5DT1VOVCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKHNUICsgMzMzICogODY0ZTUsIFwiMzMzINC00L3Rj1wiLCBDb29sRGF0ZS5DT1VOVCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKHNUICsgMzQ1ICogODY0ZTUsIFwiMzQ1INC00L3QtdC5XCIsIENvb2xEYXRlLkNPVU5UKSxcblxuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqINCS0LDQttC90YvQtSDRgdC+0LHRi9GC0LjRj1xuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIG5ldyBDb29sRGF0ZShmaXJzdEltcG9ydGFudCgxLCAxNCksIFwi0J/QtdGA0LLQvtC1IFxcXCIxNCDRhNC10LLRgNCw0LvRj1xcXCIg0LLQvNC10YHRgtC1XCIsIENvb2xEYXRlLklNUE9SVEFOVCksXG4gICAgICAgICAgICAgICAgbmV3IENvb2xEYXRlKGZpcnN0SW1wb3J0YW50KDEsIDIzKSwgXCLQn9C10YDQstC+0LUgXFxcIjIzINGE0LXQstGA0LDQu9GPXFxcIiDQstC80LXRgdGC0LVcIiwgQ29vbERhdGUuSU1QT1JUQU5UKSxcbiAgICAgICAgICAgICAgICBuZXcgQ29vbERhdGUoZmlyc3RJbXBvcnRhbnQoMiwgOCksIFwi0J/QtdGA0LLQvtC1IFxcXCI4INC80LDRgNGC0LBcXFwiINCy0LzQtdGB0YLQtVwiLCBDb29sRGF0ZS5JTVBPUlRBTlQpXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgbmVhcmVzdCxcbiAgICAgICAgICAgIG5lYXJlc3RJdGVyYXRvciA9IDA7XG5cbiAgICAgICAgJCQubG9nKGhELCBzRCwgc00sIHNZKTtcblxuICAgICAgICBjb29sLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICAgIHJldHVybiBhLnRpbWVzdGFtcCAtIGIudGltZXN0YW1wO1xuICAgICAgICB9KTtcblxuICAgICAgICBuZWFyZXN0ID0gY29vbC5maWx0ZXIoZnVuY3Rpb24gKGNvb2wsIGluZGV4KSB7XG4gICAgICAgICAgICByZXR1cm4gaW5kZXggPCAxMCAmJiAoY29vbC50aW1lc3RhbXAgLSB0VCkgLyA4NjRlNSA+PSAwO1xuICAgICAgICB9KTtcblxuICAgICAgICAkJC5sb2cobmVhcmVzdCk7XG5cbiAgICAgICAgJChcIi50aXRsZS5kYXlzXCIpXG4gICAgICAgICAgICAudGV4dChkYXlzKTtcblxuICAgICAgICAkKFwiLnRleHQgLmRheXNcIilcbiAgICAgICAgICAgIC50ZXh0KFxuICAgICAgICAgICAgICAgIFNsYXZ1bnlhXG4gICAgICAgICAgICAgICAgICAgIC5tYXRoKGRheXMpXG4gICAgICAgICAgICAgICAgICAgIC5kZWNsaW5hdGlvbihbXG4gICAgICAgICAgICAgICAgICAgICAgICBcItC00LXQvdGMXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcItC00L3Rj1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCLQtNC90LXQuVwiXG4gICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICQoXCIjbmVhcmVzdFwiKVxuICAgICAgICAgICAgLmh0bWwobmVhcmVzdFtuZWFyZXN0SXRlcmF0b3JdICsgXCJcIilcbiAgICAgICAgICAgIC5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBuZWFyZXN0SXRlcmF0b3IgPSBuZWFyZXN0SXRlcmF0b3IgPCBuZWFyZXN0Lmxlbmd0aCAtIDEgPyBuZWFyZXN0SXRlcmF0b3IgKyAxIDogMDtcblxuICAgICAgICAgICAgICAgICQodGhpcylcbiAgICAgICAgICAgICAgICAgICAgLmh0bWwobmVhcmVzdFtuZWFyZXN0SXRlcmF0b3JdICsgXCJcIik7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAkKFwiYm9keVwiKVxuICAgICAgICAgICAgLmRlbGF5KDJlMylcbiAgICAgICAgICAgIC5xdWV1ZShmdW5jdGlvbiAobmV4dCkge1xuICAgICAgICAgICAgICAgICQodGhpcylcbiAgICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKFwicmVhZHlcIik7XG4gICAgICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICB9KTtcblxufSkoalF1ZXJ5LCBTbGF2dW55YSk7XG5cbihmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGJhciA9IG5ldyBQcm9ncmVzc0Jhci5QYXRoKCcjaGVhcnQtcGF0aCcsIHtcbiAgICAgICAgZWFzaW5nOiAgICdlYXNlSW5PdXQnLFxuICAgICAgICBkdXJhdGlvbjogMTQwMCAqIDJcbiAgICB9KTtcblxuICAgIGJhci5zZXQoLTEpO1xuICAgIGJhci5hbmltYXRlKDEpO1xufSkoKTtcbiJdfQ==
