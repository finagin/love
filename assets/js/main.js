!function(e,t){t.urlParams("debug")&&t.debug,e(function(){function o(e){return e.length}function n(e,t){return+new Date(D,e,t)>u?+new Date(D,e,t):+new Date(D+1,e,t)}!function(e){e.CoolDate=function(e,t,o){this.__timestamp=e,this.__title=t,this.__type=o.toLowerCase()},e.CoolDate.prototype={constructor:CoolDate,get timestamp(){return this.__timestamp},get title(){return this.__title},toString:function(){var e=Math.ceil((this.__timestamp-s)/864e5);return[0==e?"Сегодня":[1==e?"Завтра":2==e?"Послезавтра":["Через","<b>"+e+"</b>",Slavunya.math(e).declination(["день","дня","дней"]).toLowerCase()].join(" "),"будет"].join(" "),this.__type+":",this.__title+"."].join(" ")}},e.CoolDate.__defineGetter__("MONTH",function(){return"Круглая дата"}),e.CoolDate.__defineGetter__("COUNT",function(){return"Красивое количество дней"}),e.CoolDate.__defineGetter__("IMPORTANT",function(){return"Важное событие"})}(window);var a,l,i=location.hash.replace("#","").split("/").filter(o),C=parseInt(i[2])||11,r=(i[1]||8)-1,D=parseInt(i[0])||2016,u=+new Date(D,r,C),s=+new Date,c=parseInt((+new Date-u)/864e5),w=[new CoolDate((+new Date(D+1,r,C)),"Год",CoolDate.MONTH),new CoolDate((+new Date(D+1,r+6,C)),"Полтора год",CoolDate.MONTH),new CoolDate(u+95904e5,"111 дней",CoolDate.COUNT),new CoolDate(u+106272e5,"123 дня",CoolDate.COUNT),new CoolDate(u+1728e7,"200 дней",CoolDate.COUNT),new CoolDate(u+18144e6,"2 1 0",CoolDate.COUNT),new CoolDate(u+191808e5,"222 дня",CoolDate.COUNT),new CoolDate(u+202176e5,"234 дня",CoolDate.COUNT),new CoolDate(u+2592e7,"300 дней",CoolDate.COUNT),new CoolDate(u+277344e5,"3 2 1",CoolDate.COUNT),new CoolDate(u+287712e5,"333 дня",CoolDate.COUNT),new CoolDate(u+29808e6,"345 дней",CoolDate.COUNT),new CoolDate(n(1,14),'Первое "14 февраля" вместе',CoolDate.IMPORTANT),new CoolDate(n(1,23),'Первое "23 февраля" вместе',CoolDate.IMPORTANT),new CoolDate(n(2,8),'Первое "8 марта" вместе',CoolDate.IMPORTANT)],h=0,_=0;for(l=1;l<12;l++)w.push(new CoolDate((+new Date(D,r+l,C)),[l,6==с?"Полгода":t.math(l).declination(["месяц","месяца","месяцев"])].join(" "),CoolDate.MONTH));for(l=2;l<=10;l++)w.push(new CoolDate((+new Date(D+l,r,C)),[l,t.math(l).declination(["год","года","лет"])].join(" "),CoolDate.MONTH));w.sort(function(e,t){return e.timestamp-t.timestamp}),a=w.filter(function(e){return h<10&&(e.timestamp-s)/864e5>=0&&(h++,!0)}),t.log(a),e(".title.days").text(c),e(".text .days").text(Slavunya.math(c).declination(["день","дня","дней"])),e("#nearest").html(a[_]+"").on("click",function(){_=_<a.length-1?_+1:0,e(this).html(a[_]+"")}).on("contextmenu",function(t){t.preventDefault(),_=_>0?_-1:a.length-1,e(this).html(a[_]+"")}),e("body").delay(2e3).queue(function(t){e(this).addClass("ready"),t()})})}(jQuery,Slavunya),function(){var e=new ProgressBar.Path("#heart-path",{easing:"easeInOut",duration:2800});e.set(-1),e.animate(1)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
